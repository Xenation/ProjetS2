#version 150 core

in vec2 position;
in vec2 textureUVs;

out vec2 textureCoords;
out float alphaPass;
out vec3 lightPass;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform float alpha;
uniform float depth;
uniform vec3 light;
//uniform vec3 naturalLight;

void main(void) {
	gl_Position = projectionMatrix * viewMatrix * transformationMatrix * vec4(position, depth, 1.0);
	textureCoords = textureUVs;
	alphaPass = alpha;
	lightPass = light;
	if (lightPass.r > 1) {
		lightPass.rgb /= lightPass.r;
	}
	if (lightPass.g > 1) {
		lightPass.rgb /= lightPass.g;
	}
	if (lightPass.b > 1) {
		lightPass.rgb /= lightPass.b;
	}
	
}